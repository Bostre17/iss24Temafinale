System oprobot

Event burnEnd : burnEnd(BTIME)
Dispatch go : go(ACTION)

Context ctxoprobot ip [host="localhost" port=8002]

QActor oprobot context ctxoprobot {

    State s0 initial {
        println("$name attivo")
    }
    Goto home
    
    //	Da considerare alla fine di State home e State ashout:
    // 		se il contenitore WasteStorage non è vuoto, il contenitore AshStorage non è pieno e 
	//		l'inceneritore non è in fase di combustione, passare alla porta WASTEIN. 
	//		Se una delle condizioni non è vera, attendere a HOME finché non diventa vera.

    State home {
        println("Robot in home position")
    }
    Transition t0 whenEvent burnEnd -> burnout
    //				whenMsg go -> wastein
    //				whenMsg go -> burnout
 
    
    //	messaggio di transizione da home a WASTEIN o da home a BURNOUT
    //	ancora da definire il mittente ed il tipo di messaggio 
    //	in quanto non è specificato dal committente 
	
    State wastein {
        println("OpRobot: prelievo roll packets da WASTEIN") color green
    }Goto burnin

    State burnin {
        println("OpRobot: deposito roll packets nella porta BURNIN") color green
    }Goto home

    State burnout {
        println("OpRobot: prelievo cenere dalla porta BURNOUT") color green
    }Goto ashout

    State ashout {
        println("OpRobot: deposito cenere nella porta ASHOUT") color green
    }
    //Transition t0 whenMsg go -> wastein 
    //				whenMsg go -> home
	
	//	messaggio di transizione da ASHOUT a home o da ASHOUT a WASTEIN
    //	ancora da definire il mittente ed il tipo di messaggio 
    //	in quanto non è specificato dal committente
}