System incinerator

Event startUp: startUp(BTIME)
Event startBurning: startBurning(BTIME)
Event burning: burning(start)
Event finishedBurning : finishedBurning(complete)
Event burnEnd : burnEnd(stop)

Context ctxincinerator ip [host="localhost" port=8001] 


QActor incinerator context ctxincinerator {
    [#
    val BTIME = 200L
    var burningInProgress = false
    #]

    State s0 initial {
        printCurrentMessage
        println("Incinerator: Initialized") color green
    }
    Transition t0 
        whenEvent startUp -> standby
        whenEvent startBurning -> startBurningCycle

    State standby {
        println("Incinerator: Standing by") color green
    }

    State startBurningCycle {
        println("Incinerator: Starting burning cycle") color green
        emit burning : burning(start)

        [#
        burningInProgress = true
        #]


        emit finishedBurning : finishedBurning(complete)
        emit burnEnd : burnEnd(stop)
    }
    Goto standby
}